Resources:
  MyFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri: 
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: CodeBucket
              - "/"
              - Ref: CodeKey
        S3Bucket: 
          Ref: CodeBucket
        S3Key: 
          Ref: CodeKey
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - MyFunctionRole
          - Arn
      Runtime: nodejs14.x

  MyFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: S3ReadWriteAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:GetBucketLocation
            Resource: 
              - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: CodeBucket
              - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: CodeBucket
                    - "/*"

  CodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-code-bucket

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodeBucket
        Type: S3
      Name: my-pipeline
      RoleArn: !GetAtt [ PipelineRole, Arn ]
      Stages:
      - Name: Source
        Actions:
        - ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: '1'
          Configuration:
            Owner: my-github-username
            Repo: my-repo
            Branch: my-branch
            OAuthToken: my-oauth-token
          Name: Source
          OutputArtifacts:
          - Name: source_output
          RunOrder: 1
      - Name: Deploy
        Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName: my-codebuild-project
          InputArtifacts:
          - Name: source_output
          Name: Build
          RunOrder: 1
        - ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: Lambda
            Version: '1'
          Configuration:
            FunctionName: !Ref MyFunction
            S3Bucket: !Ref CodeBucket
            S3Key: !Ref CodeKey
          InputArtifacts:
          - Name: source_output
          Name: Deploy
          RunOrder: 2

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: CodePipelineAccess
        PolicyDocument:
          Version: '2012-10-17'
